 -----
 Uqbar Project
 -----
 ${project.name}
 -----

Uqbar Maven Repositories
 
 In order to use use Arena you need to configure Uqbar's repositories in your maven's settings file.

+--------------------------------------------+

  <profiles>
        <profile>
              <id>uqbar-wiki</id>
              <repositories>
                    <repository>
                        <id>uqbar-wiki.org-releases</id>
                        <name>uqbar-wiki.org-releases</name>
                        <url>http://uqbar-wiki.org/mvn/releases</url>
                    </repository>
                    <repository>
                        <snapshots/>
                        <id>uqbar-wiki.org-snapshots</id>
                        <name>uqbar-wiki.org-snapshots</name>
                        <url>http://uqbar-wiki.org/mvn/snapshots</url>
                   </repository>
              </repositories>
        </profile>
  </profiles>

  <activeProfiles>
       <activeProfile>uqbar-wiki</activeProfile>
  </activeProfiles>

+--------------------------------------------+

Arena Artifacts

 Your UI project must depend on one of the Arena implementations. Currently the stable implementation is based on <<eclipse swt+jface>> and its call
 <<arena-jface>>:

+---------------------------------------------+

<dependency>
	<groupId>org.uqbar-project</groupId>
	<artifactId>arena-jface</artifactId>
	<version>${project.version}</version>
</dependency>

+---------------------------------------------+

 Your domain project must depend on <<uqbar-domain>>:

+---------------------------------------------+
<dependency>
	<groupId>org.uqbar-project</groupId>
	<artifactId>uqbar-domain</artifactId>
	<version>3.3</version>
</dependency>
+---------------------------------------------+

 If you have a single project which contains the ui along with the domain, then you just need to include the dependency to <<arena-jface>> only. Although this is not the recommended way to do it since you'll be coupling model with UI in terms of artifact.

